//------------------------------------------------------------------------------

#include <iostream>
#include <cstdlib>
using namespace std;

//------------------------------------------------------------------------------

class DynamicArray{
private:
	int size;
	int capacity;
	double* array;

public:

//default constructor
//------------------------------------------------------------------------------
	DynamicArray(){
		capacity = 20;
		size = 0;
		array = new double [capacity];
	}
//------------------------------------------------------------------------------

//functions
//------------------------------------------------------------------------------
	void addElement(double num){
		if(size == capacity){
			double *temp = new double[capacity +10];
			for(int i = 0; i < size; i++){
				temp[i] = array[i];
			}
		capacity += 10;
		delete []array;
		}
	array[size] = num;
	size +=1;
	}
	void removeElement(double num){
        for(int i = 0; i < size; i++){
                if(array[i] == num){
                        int j = i;
                        while(j < size){
                        array[j] = array[j+1];
                        j++;
			}
                        i = size;
                        size--;
                }
        }

}

	void print(){
		cout << "---------------------------------" << endl;
		cout << "\n\n";
		for(int i = 0; i < size; i++){
			cout << array[i]<< "\n";
		}
		cout << "capacity: " << capacity << "\nsize: " << size << "\n\n";
		cout << "--------------------------------" << endl;
		
	}

	void segmentation(int x){
	int j = 20/x;
	for(int i = 0; i < x; i++){
		double *temp = 
	}
	}
};


int main(){
DynamicArray r;
r.addElement(8.8);
r.addElement(7.8);
r.addElement(9.8);
r.addElement(4.8);
r.addElement(3.8);
r.addElement(2.8);
r.addElement(1.8);
r.print();
r.removeElement(7.8);
r.print();
return 0;
}
